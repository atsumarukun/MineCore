scalar Time
scalar Upload

type File {
  name: String!
  key: String!
  type: String!
  isDir: Boolean!
  size: Int
  updated_at: Time
}

type Download {
  name: String!
  data: String!
}

input UpdateFileInput {
  key: String!
  destination: String!
}

extend type Query {
  files(path: String!, name: String, isDir: Boolean): [File!]!
}

extend type Mutation {
  downloadFiles(keys: [String!]!): Download!
  moveFile(input: [UpdateFileInput!]!): [String!]!
  copyFile(input: [UpdateFileInput!]!): [String!]!
  makeDir(key: String!): String!
  removeFiles(keys: [String!]!): [String!]!
}
