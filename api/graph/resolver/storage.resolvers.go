package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"api/graph"
	"api/graph/model"
	"api/graph/service"
	"context"

	"github.com/99designs/gqlgen/graphql"
)

// UploadFiles is the resolver for the uploadFiles field.
func (r *mutationResolver) UploadFiles(ctx context.Context, path string, files []*graphql.Upload) ([]*model.File, error) {
	serv := service.StorageService{}
	return serv.UploadFiles(path, files)
}

// Files is the resolver for the files field.
func (r *queryResolver) Files(ctx context.Context, path string) ([]*model.File, error) {
	serv := service.StorageService{}
	return serv.GetFiles(path)
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
